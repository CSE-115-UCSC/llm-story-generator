{"ast":null,"code":"var _jsxFileName = \"/Users/rajat/Desktop/CSE115A/Veracity-llm-story-generator/frontend/site/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, InputBase, IconButton, Typography, Paper, styled, useTheme } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = styled(Paper)(({\n  theme\n}) => ({\n  width: '100%',\n  height: '100%',\n  backgroundColor: theme.palette.background.default,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  boxSizing: 'border-box'\n}));\n_c = ChatContainer;\nconst ChatMessages = styled(Box)({\n  flexGrow: 1,\n  padding: '10px',\n  overflowY: 'auto'\n});\n_c2 = ChatMessages;\nconst ChatMessageContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'flex-start',\n  margin: '10px 0'\n});\n_c3 = ChatMessageContainer;\nconst ChatMessage = styled(Box)(({\n  user,\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: '15px',\n  padding: '10px',\n  borderRadius: '5px',\n  backgroundColor: user ? theme.palette.custom.messageBubble.user.background : theme.palette.custom.messageBubble.bot.background,\n  color: user ? theme.palette.custom.messageBubble.user.text : theme.palette.custom.messageBubble.bot.text,\n  maxWidth: '80%'\n}));\n_c4 = ChatMessage;\nconst ChatInputContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: '10px',\n  borderTop: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.default\n}));\n_c5 = ChatInputContainer;\nconst StyledInputBase = styled(InputBase)(({\n  theme\n}) => ({\n  flexGrow: 1,\n  padding: '10px',\n  borderRadius: '20px',\n  backgroundColor: theme.palette.custom.inputField.background,\n  marginRight: '10px',\n  color: theme.palette.custom.inputField.text\n}));\n_c6 = StyledInputBase;\nconst StyledPersonIcon = styled(PersonIcon)(({\n  theme\n}) => ({\n  fontSize: '50px',\n  // Adjust size of the user icon\n  color: theme.palette.custom.icons.user,\n  alignSelf: 'flex-start' // Adjust vertical position\n}));\n_c7 = StyledPersonIcon;\nconst StyledSmartToyIcon = styled(SmartToyIcon)(({\n  theme\n}) => ({\n  fontSize: '50px',\n  // Adjust size of the bot icon\n  color: theme.palette.custom.icons.bot,\n  alignSelf: 'flex-start' // Adjust vertical position\n}));\n_c8 = StyledSmartToyIcon;\nfunction Chat() {\n  _s();\n  const theme = useTheme();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  const getLLMResponse = () => {\n    const prompt = input.trim();\n    if (!prompt) return;\n    setMessages([...messages, {\n      text: prompt,\n      user: true\n    }]);\n    setInput('');\n    setMessages(prevMessages => [...prevMessages, {\n      text: '',\n      user: false,\n      typing: true\n    }]);\n    fetch('http://127.0.0.1:5000/chapter/1', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"query\": prompt\n      })\n    }).then(response => {\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder('utf-8'); // Ensure UTF-8 decoding\n      let partialResult = '';\n      reader.read().then(function pump({\n        done,\n        value\n      }) {\n        if (done) {\n          // Finalize message if done\n          setMessages(prevMessages => {\n            const newMessages = [...prevMessages];\n            newMessages[newMessages.length - 1] = {\n              ...newMessages[newMessages.length - 1],\n              text: partialResult,\n              typing: false\n            };\n            return newMessages;\n          });\n          return;\n        }\n        const chunkString = decoder.decode(value, {\n          stream: true\n        });\n        partialResult += chunkString;\n        simulateBotResponse(chunkString);\n        return reader.read().then(pump);\n      });\n    }).catch(err => console.error(err));\n  };\n  const simulateBotResponse = text => {\n    let index = -1;\n    const interval = setInterval(() => {\n      if (index < text.length - 1) {\n        setMessages(prevMessages => {\n          const newMessages = [...prevMessages];\n          newMessages[newMessages.length - 1] = {\n            ...newMessages[newMessages.length - 1],\n            text: newMessages[newMessages.length - 1].text + text[++index]\n          };\n          return newMessages;\n        });\n      } else {\n        clearInterval(interval);\n      }\n    }, 25);\n  };\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(ChatMessages, {\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessageContainer, {\n        children: [message.user ? /*#__PURE__*/_jsxDEV(StyledPersonIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(StyledSmartToyIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ChatMessage, {\n          user: message.user,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInputBase, {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && getLLMResponse(),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: getLLMResponse,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"eseyiuV6unDABcjkXD/S/zaTNxs=\", false, function () {\n  return [useTheme];\n});\n_c9 = Chat;\nexport default Chat;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"ChatMessages\");\n$RefreshReg$(_c3, \"ChatMessageContainer\");\n$RefreshReg$(_c4, \"ChatMessage\");\n$RefreshReg$(_c5, \"ChatInputContainer\");\n$RefreshReg$(_c6, \"StyledInputBase\");\n$RefreshReg$(_c7, \"StyledPersonIcon\");\n$RefreshReg$(_c8, \"StyledSmartToyIcon\");\n$RefreshReg$(_c9, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","InputBase","IconButton","Typography","Paper","styled","useTheme","SendIcon","SmartToyIcon","PersonIcon","jsxDEV","_jsxDEV","ChatContainer","theme","width","height","backgroundColor","palette","background","default","display","flexDirection","justifyContent","boxSizing","_c","ChatMessages","flexGrow","padding","overflowY","_c2","ChatMessageContainer","alignItems","margin","_c3","ChatMessage","user","marginLeft","borderRadius","custom","messageBubble","bot","color","text","maxWidth","_c4","ChatInputContainer","borderTop","divider","_c5","StyledInputBase","inputField","marginRight","_c6","StyledPersonIcon","fontSize","icons","alignSelf","_c7","StyledSmartToyIcon","_c8","Chat","_s","messages","setMessages","input","setInput","messagesEndRef","getLLMResponse","prompt","trim","prevMessages","typing","fetch","method","headers","body","JSON","stringify","then","response","reader","getReader","decoder","TextDecoder","partialResult","read","pump","done","value","newMessages","length","chunkString","decode","stream","simulateBotResponse","catch","err","console","error","index","interval","setInterval","clearInterval","current","scrollIntoView","behavior","elevation","children","map","message","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","e","target","onKeyPress","key","placeholder","onClick","_c9","$RefreshReg$"],"sources":["/Users/rajat/Desktop/CSE115A/Veracity-llm-story-generator/frontend/site/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Box, InputBase, IconButton, Typography, Paper, styled, useTheme } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\nimport PersonIcon from '@mui/icons-material/Person';\n\nconst ChatContainer = styled(Paper)(({ theme }) => ({\n  width: '100%',\n  height: '100%',\n  backgroundColor: theme.palette.background.default,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  boxSizing: 'border-box',\n}));\n\nconst ChatMessages = styled(Box)({\n  flexGrow: 1,\n  padding: '10px',\n  overflowY: 'auto',\n});\n\nconst ChatMessageContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'flex-start',\n  margin: '10px 0',\n});\n\nconst ChatMessage = styled(Box)(({ user, theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: '15px',\n  padding: '10px',\n  borderRadius: '5px',\n  backgroundColor: user ? theme.palette.custom.messageBubble.user.background : theme.palette.custom.messageBubble.bot.background,\n  color: user ? theme.palette.custom.messageBubble.user.text : theme.palette.custom.messageBubble.bot.text,\n  maxWidth: '80%',\n}));\n\nconst ChatInputContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: '10px',\n  borderTop: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  flexGrow: 1,\n  padding: '10px',\n  borderRadius: '20px',\n  backgroundColor: theme.palette.custom.inputField.background,\n  marginRight: '10px',\n  color: theme.palette.custom.inputField.text,\n}));\n\nconst StyledPersonIcon = styled(PersonIcon)(({ theme }) => ({\n  fontSize: '50px', // Adjust size of the user icon\n  color: theme.palette.custom.icons.user,\n  alignSelf: 'flex-start', // Adjust vertical position\n}));\n\nconst StyledSmartToyIcon = styled(SmartToyIcon)(({ theme }) => ({\n  fontSize: '50px', // Adjust size of the bot icon\n  color: theme.palette.custom.icons.bot,\n  alignSelf: 'flex-start', // Adjust vertical position\n}));\n\nfunction Chat() {\n  const theme = useTheme();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n\n  const getLLMResponse = () => {\n    const prompt = input.trim();\n    if (!prompt) return;\n    \n    setMessages([...messages, { text: prompt, user: true }]);\n    setInput('');\n    setMessages((prevMessages) => [\n      ...prevMessages,\n      { text: '', user: false, typing: true },\n    ]);\n\n    fetch('http://127.0.0.1:5000/chapter/1', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ \"query\": prompt })\n    })\n    .then((response) => {\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder('utf-8'); // Ensure UTF-8 decoding\n      let partialResult = '';\n  \n      reader.read().then(function pump({ done, value }) {\n        if (done) {\n          // Finalize message if done\n          setMessages((prevMessages) => {\n            const newMessages = [...prevMessages];\n            newMessages[newMessages.length - 1] = {\n              ...newMessages[newMessages.length - 1],\n              text: partialResult,\n              typing: false,\n            };\n            return newMessages;\n          });\n          return;\n        }\n  \n        const chunkString = decoder.decode(value, { stream: true });\n        partialResult += chunkString;\n        simulateBotResponse(chunkString);\n        return reader.read().then(pump);\n  \n  \n      });\n    })\n    .catch((err) => console.error(err));\n  };\n\n  const simulateBotResponse = (text) => {\n    let index = -1;\n    const interval = setInterval(() => {\n      if (index < text.length - 1) {\n        setMessages((prevMessages) => {\n          const newMessages = [...prevMessages];\n          newMessages[newMessages.length - 1] = {\n            ...newMessages[newMessages.length - 1],\n            text: newMessages[newMessages.length - 1].text + text[++index],\n          };\n          return newMessages;\n        });\n      } else {\n        clearInterval(interval);\n      }\n    }, 25);\n  };\n\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  return (\n    <ChatContainer elevation={3}>\n      <ChatMessages>\n        {messages.map((message, index) => (\n          <ChatMessageContainer key={index}>\n            {message.user ? \n              <StyledPersonIcon /> :\n              <StyledSmartToyIcon />\n            }\n            <ChatMessage user={message.user}>\n              <Typography>{message.text}</Typography>\n            </ChatMessage>\n          </ChatMessageContainer>\n        ))}\n        <div ref={messagesEndRef} />\n      </ChatMessages>\n      <ChatInputContainer>\n        <StyledInputBase\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={(e) => e.key === 'Enter' && getLLMResponse()}\n          placeholder=\"Type a message...\"\n        />\n        <IconButton color=\"primary\" onClick={getLLMResponse}>\n          <SendIcon />\n        </IconButton>\n      </ChatInputContainer>\n    </ChatContainer>\n  );\n}\n\n\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}