{"ast":null,"code":"var _jsxFileName = \"/Users/rajat/Desktop/CSE115A/Veracity-llm-story-generator/frontend/site/src/Chapter.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography } from '@mui/material';\nimport { splitTextIntoParagraphsAndLines } from './utils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chapters() {\n  _s();\n  //const [selectedChapter, setSelectedChapter] = useState(null);\n  //const [expandedChapters, setExpandedChapters] = useState({});\n  const [chapters, setChapters] = useState([]);\n  console.log(\"TEST\");\n  UpdateChapterList(1);\n\n  //add chapter to list\n  //chapters.push({ id: 4, title: 'Chapter 4: test', content: `Content of Chapter 4: lalalala 12345678 lalal baba haha xixi cici` })\n\n  //const addChapter = (newchapter) => { setChapters((prevChapters) => [...prevChapters, newchapter]); }\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/chapters', {\n      method: 'GET' // Specify the request method\n    }).then(response => response.json()).then(data => {\n      console.log('GET Response:', data);\n      setChapters(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: chapters.map((text, index) => /*#__PURE__*/_jsxDEV(Chapter, {\n      number: index + 1,\n      text: text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 40\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Chapters, \"kMzM1Ewh/Nyqi5ErwxDBUTCgzmg=\");\n_c = Chapters;\nexport default Chapters;\n\n// call api and turn it into a dictionary that can then be added to the list\n// \n// { id: #, title: 'Chapter #: name', content: `Content of Chapter #: ` }\nfunction UpdateChapterList(chapter) {\n  //get chapter contents from api call\n\n  fetch('http://127.0.0.1:5000/chapter/' + chapter, {\n    method: 'GET' // Specify the request method\n  }).then(response => response.json()).then(data => {\n    console.log('GET Response:', data);\n  });\n\n  /*\n    var ChapterContent='';\n    const CapterNumber = chapter+1;\n  \n    const ChapterToAdd =  { id: CapterNumber, title: 'Chapter '+CapterNumber+':', content: \"Content of Chapter \"+ CapterNumber+\":\"+ChapterContent};\n  \n    return ChapterToAdd\n    */\n}\n_c2 = UpdateChapterList;\n;\n\n// props: string(chapter text), int(chapter number)\nfunction Chapter(props) {\n  _s2();\n  const [selectedChapter, setSelectedChapter] = useState(null);\n  const [expandedChapters, setExpandedChapters] = useState({});\n  const toggleChapterExpansion = chapterId => {\n    setExpandedChapters(prev => ({\n      ...prev,\n      [chapterId]: !prev[chapterId]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mb: 2,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: () => setSelectedChapter(props.number),\n      children: [\"Chapter: \", props.number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), selectedChapter === props.number && /*#__PURE__*/_jsxDEV(Box, {\n      children: expandedChapters[props.number] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [splitTextIntoParagraphsAndLines(props.text, 10).map((paragraph, pIndex) => /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: paragraph.map((line, lIndex) => /*#__PURE__*/_jsxDEV(Typography, {\n            children: line\n          }, lIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this))\n        }, pIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => toggleChapterExpansion(props.number),\n          children: \"Collapse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [splitTextIntoParagraphsAndLines(props.text, 10).map((paragraph, pIndex) => /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: paragraph.slice(0, 2).map((line, lIndex) => /*#__PURE__*/_jsxDEV(Typography, {\n            children: line\n          }, lIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this))\n        }, pIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => toggleChapterExpansion(props.number),\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, props.number, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s2(Chapter, \"+E5qdAb47sr6KIn1tIRhYof5y0U=\");\n_c3 = Chapter;\n;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Chapters\");\n$RefreshReg$(_c2, \"UpdateChapterList\");\n$RefreshReg$(_c3, \"Chapter\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","splitTextIntoParagraphsAndLines","jsxDEV","_jsxDEV","Fragment","_Fragment","Chapters","_s","chapters","setChapters","console","log","UpdateChapterList","fetch","method","then","response","json","data","children","map","text","index","Chapter","number","fileName","_jsxFileName","lineNumber","columnNumber","_c","chapter","_c2","props","_s2","selectedChapter","setSelectedChapter","expandedChapters","setExpandedChapters","toggleChapterExpansion","chapterId","prev","mb","variant","onClick","paragraph","pIndex","line","lIndex","slice","_c3","$RefreshReg$"],"sources":["/Users/rajat/Desktop/CSE115A/Veracity-llm-story-generator/frontend/site/src/Chapter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography } from '@mui/material';\nimport { splitTextIntoParagraphsAndLines } from './utils';\n\nfunction Chapters() {\n  //const [selectedChapter, setSelectedChapter] = useState(null);\n  //const [expandedChapters, setExpandedChapters] = useState({});\n  const [chapters, setChapters] = useState([]);\n\n  console.log(\"TEST\");\n  UpdateChapterList(1);\n\n  //add chapter to list\n  //chapters.push({ id: 4, title: 'Chapter 4: test', content: `Content of Chapter 4: lalalala 12345678 lalal baba haha xixi cici` })\n\n  //const addChapter = (newchapter) => { setChapters((prevChapters) => [...prevChapters, newchapter]); }\n  useEffect (() => {fetch('http://127.0.0.1:5000/chapters', {\n    method: 'GET' // Specify the request method\n    })\n    .then(response => response.json())\n    .then(data=>{ \n      console.log('GET Response:', data)\n      setChapters(data)\n    })\n  }, []);\n\n  return (\n    <Box>\n      {chapters.map((text, index) => ( <Chapter number={index+1} text={text} key={index}/> ))}\n    </Box>\n  );\n}\n\nexport default Chapters;\n\n// call api and turn it into a dictionary that can then be added to the list\n// \n// { id: #, title: 'Chapter #: name', content: `Content of Chapter #: ` }\nfunction UpdateChapterList(chapter){\n  //get chapter contents from api call\n\n  fetch('http://127.0.0.1:5000/chapter/'+chapter, {\n    method: 'GET' // Specify the request method\n    })\n    .then(response => response.json())\n    .then(data=>{console.log('GET Response:', data)})\n  \n\n/*\n  var ChapterContent='';\n  const CapterNumber = chapter+1;\n\n  const ChapterToAdd =  { id: CapterNumber, title: 'Chapter '+CapterNumber+':', content: \"Content of Chapter \"+ CapterNumber+\":\"+ChapterContent};\n\n  return ChapterToAdd\n  */\n};\n\n// props: string(chapter text), int(chapter number)\nfunction Chapter(props) {\n  const [selectedChapter, setSelectedChapter] = useState(null);\n  const [expandedChapters, setExpandedChapters] = useState({});\n\n  const toggleChapterExpansion = (chapterId) => {\n    setExpandedChapters(prev => ({\n      ...prev,\n      [chapterId]: !prev[chapterId]\n    }));\n  };\n\n  return (\n    \n    <Box key={props.number} mb={2}>\n    <Button variant=\"outlined\" onClick={() => setSelectedChapter(props.number)}>\n      Chapter: {props.number}\n    </Button>\n    {selectedChapter === props.number && (\n      <Box>\n        {expandedChapters[props.number] ? (\n          <>\n            {splitTextIntoParagraphsAndLines(props.text, 10).map((paragraph, pIndex) => (\n              <Box key={pIndex} mb={2}>\n                {paragraph.map((line, lIndex) => (\n                  <Typography key={lIndex}>{line}</Typography>\n                ))}\n              </Box>\n            ))}\n            <Button onClick={() => toggleChapterExpansion(props.number)}>\n              Collapse\n            </Button>\n          </>\n        ) : (\n          <>\n            {splitTextIntoParagraphsAndLines(props.text, 10).map((paragraph, pIndex) => (\n              <Box key={pIndex} mb={2}>\n                {paragraph.slice(0, 2).map((line, lIndex) => (\n                  <Typography key={lIndex}>{line}</Typography>\n                ))}\n              </Box>\n            ))}\n            <Button onClick={() => toggleChapterExpansion(props.number)}>\n              Load more\n            </Button>\n          </>\n        )}\n      </Box>\n    )}\n  </Box>\n\n  );\n\n};\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}