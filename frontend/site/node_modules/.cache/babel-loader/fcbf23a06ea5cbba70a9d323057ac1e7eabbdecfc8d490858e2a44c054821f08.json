{"ast":null,"code":"var _jsxFileName = \"/Users/rajat/Desktop/CSE115A/Veracity-llm-story-generator/frontend/site/src/Character.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, IconButton, Grid } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { splitTextIntoParagraphsAndLines } from './utils';\n\n// Can you see making a comment. YES\n// cd frontend/site && npm start\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Characters() {\n  _s();\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [characters, setCharacters] = useState([]); // hold a list of characters (append characters to it), 'character name': ['trait1', 'trait2', ...] \n\n  useEffect(() => {\n    fetch('http://127.0.0.1/characters', {\n      method: 'GET'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      setCharacters(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const handleCorrect = id => {\n    console.log(`Character ${id} marked as correct`);\n    // Send message to AI\n    // SendMessageToAI(id, 'correct');\n  };\n  const handleIncorrect = id => {\n    console.log(`Character ${id} marked as incorrect`);\n    // Send message to AI\n    // SendMessageToAI(id, 'incorrect');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: characters.map(name => /*#__PURE__*/_jsxDEV(Character, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n// {characters.map(character => (\n//   <Box key={character.id} mb={2}>\n//     <Button variant=\"outlined\" onClick={() => setSelectedCharacter(character.id)}>\n//       {character.name}\n//     </Button>\n//     {selectedCharacter === character.id && (\n//       <Box>\n//         {splitTextIntoParagraphsAndLines(character.details, 10).map((paragraph, pIndex) => (\n//           <Box key={pIndex} mb={2}>\n//             {paragraph.map((line, lIndex) => (\n//               <Typography key={lIndex}>{line}</Typography>\n//             ))}\n//           </Box>\n//         ))}\n//         <Grid container spacing={1}>\n//           <Grid item>\n//             <IconButton color=\"primary\" sx={{ p: 0.5 }} onClick={() => handleCorrect(character.id)}>\n//               <CheckIcon />\n//             </IconButton>\n//           </Grid>\n//           <Grid item>\n//             <IconButton color=\"secondary\" sx={{ p: 0.5 }} onClick={() => handleIncorrect(character.id)}>\n//               <CloseIcon />\n//             </IconButton>\n//           </Grid>\n//         </Grid>\n//       </Box>\n//     )}\n//   </Box>\n// ))}\n\n// might need to split character up a lil bit\n_s(Characters, \"NkBupfaZok11KP3GW9Yjsf8gFRk=\");\n_c = Characters;\nfunction Character(props) {\n  _s2();\n  const [chapters, setChapter] = useState([]);\n  const callAPI = () => {\n    console.log(\"Hi I'm a button.\");\n  };\n  useEffect(() => {\n    fetch(`http://127.0.0.1/characters/${props.name}`, {\n      method: 'GET'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      setChapter(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: chapters.map(name => /*#__PURE__*/_jsxDEV(Character, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s2(Character, \"JWcKgyI41hR2oiiqJB7e1nAJ8nA=\");\n_c2 = Character;\nexport default Characters;\nvar _c, _c2;\n$RefreshReg$(_c, \"Characters\");\n$RefreshReg$(_c2, \"Character\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","IconButton","Grid","CheckIcon","CloseIcon","splitTextIntoParagraphsAndLines","jsxDEV","_jsxDEV","Characters","_s","selectedCharacter","setSelectedCharacter","characters","setCharacters","fetch","method","then","response","ok","Error","json","data","console","log","catch","error","handleCorrect","id","handleIncorrect","children","map","name","Character","fileName","_jsxFileName","lineNumber","columnNumber","_c","props","_s2","chapters","setChapter","callAPI","_c2","$RefreshReg$"],"sources":["/Users/rajat/Desktop/CSE115A/Veracity-llm-story-generator/frontend/site/src/Character.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, IconButton, Grid } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { splitTextIntoParagraphsAndLines } from './utils';\n\n// Can you see making a comment. YES\n// cd frontend/site && npm start\nfunction Characters() {\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [characters, setCharacters] = useState([]); // hold a list of characters (append characters to it), 'character name': ['trait1', 'trait2', ...] \n  \n  useEffect(() => {\n    fetch('http://127.0.0.1/characters',{ method: 'GET'})\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log(data)\n        setCharacters(data)\n      })\n      .catch(error => {\n        console.log(error)\n      });\n  }, []);\n  \n  const handleCorrect = (id) => {\n    console.log(`Character ${id} marked as correct`);\n    // Send message to AI\n    // SendMessageToAI(id, 'correct');\n  };\n\n  const handleIncorrect = (id) => {\n    console.log(`Character ${id} marked as incorrect`);\n    // Send message to AI\n    // SendMessageToAI(id, 'incorrect');\n  };\n\n  return (\n    <Box>\n      {characters.map(name => (\n        <Character name={name}/>\n      ))}\n    </Box>\n  );\n}\n\n// {characters.map(character => (\n//   <Box key={character.id} mb={2}>\n//     <Button variant=\"outlined\" onClick={() => setSelectedCharacter(character.id)}>\n//       {character.name}\n//     </Button>\n//     {selectedCharacter === character.id && (\n//       <Box>\n//         {splitTextIntoParagraphsAndLines(character.details, 10).map((paragraph, pIndex) => (\n//           <Box key={pIndex} mb={2}>\n//             {paragraph.map((line, lIndex) => (\n//               <Typography key={lIndex}>{line}</Typography>\n//             ))}\n//           </Box>\n//         ))}\n//         <Grid container spacing={1}>\n//           <Grid item>\n//             <IconButton color=\"primary\" sx={{ p: 0.5 }} onClick={() => handleCorrect(character.id)}>\n//               <CheckIcon />\n//             </IconButton>\n//           </Grid>\n//           <Grid item>\n//             <IconButton color=\"secondary\" sx={{ p: 0.5 }} onClick={() => handleIncorrect(character.id)}>\n//               <CloseIcon />\n//             </IconButton>\n//           </Grid>\n//         </Grid>\n//       </Box>\n//     )}\n//   </Box>\n// ))}\n\n\n// might need to split character up a lil bit\nfunction Character(props) {\n  const [chapters, setChapter] = useState([]);\n  const callAPI = () => {\n    console.log(\"Hi I'm a button.\")\n  }\n\n  useEffect(() => {\n    fetch(`http://127.0.0.1/characters/${props.name}`,{ method: 'GET'})\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log(data)\n        setChapter(data)\n      })\n      .catch(error => {\n        console.log(error)\n      });\n  }, []);\n\n  return (\n    <Box>\n      {chapters.map(name => (\n        <Character name={name}/>\n      ))}\n    </Box>\n  );\n}\n\nexport default Characters;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}