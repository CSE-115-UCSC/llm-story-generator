{"ast":null,"code":"var _jsxFileName = \"/home/xuan/Documents/llm-story-generator/llm-story-generator-frontend/src/Chat.js\",\n  _s = $RefreshSig$();\n// src/Chat.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, InputBase, IconButton, Typography, Paper, styled } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = styled(Paper)({\n  width: '50%',\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  boxSizing: 'border-box',\n  height: '100%'\n});\n_c = ChatContainer;\nconst ChatMessages = styled(Box)({\n  flexGrow: 1,\n  padding: '10px',\n  overflowY: 'auto'\n});\n_c2 = ChatMessages;\nconst ChatMessageContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'flex-start',\n  margin: '10px 0'\n});\n_c3 = ChatMessageContainer;\nconst ChatMessage = styled(Box)(({\n  user\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: '8px',\n  padding: '10px',\n  borderRadius: '5px',\n  backgroundColor: user ? '#007BFF' : '#f0f0f0',\n  color: user ? '#ffffff' : '#000000',\n  maxWidth: '80%'\n}));\n_c4 = ChatMessage;\nconst ChatInputContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  padding: '10px',\n  borderTop: '1px solid #ccc',\n  backgroundColor: '#fff'\n});\n_c5 = ChatInputContainer;\nconst StyledInputBase = styled(InputBase)({\n  flexGrow: 1,\n  padding: '10px',\n  borderRadius: '20px',\n  backgroundColor: '#f0f0f0',\n  marginRight: '10px'\n});\n_c6 = StyledInputBase;\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  const handleSend = () => {\n    if (input.trim()) {\n      setMessages([...messages, {\n        text: input,\n        user: true\n      }]);\n      setInput('');\n      simulateBotResponse('I am a robot. I do not know your word.');\n    }\n  };\n  const simulateBotResponse = text => {\n    setTimeout(() => {\n      setMessages(prevMessages => [...prevMessages, {\n        text: '',\n        user: false,\n        typing: true\n      }]);\n      let index = -1;\n      const interval = setInterval(() => {\n        if (index < text.length - 1) {\n          setMessages(prevMessages => {\n            const newMessages = [...prevMessages];\n            newMessages[newMessages.length - 1] = {\n              ...newMessages[newMessages.length - 1],\n              text: newMessages[newMessages.length - 1].text + text[index]\n            };\n            return newMessages;\n          });\n          index++;\n        } else {\n          clearInterval(interval);\n        }\n      }, 100); // Speed up the typing effect\n    }, 500);\n  };\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(ChatMessages, {\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessageContainer, {\n        children: [message.user ? /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(SmartToyIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(ChatMessage, {\n          user: message.user,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInputBase, {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSend(),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: handleSend,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"ub7mF0g0316z3YNHsiLBOML0ce4=\");\n_c7 = Chat;\nexport default Chat;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"ChatMessages\");\n$RefreshReg$(_c3, \"ChatMessageContainer\");\n$RefreshReg$(_c4, \"ChatMessage\");\n$RefreshReg$(_c5, \"ChatInputContainer\");\n$RefreshReg$(_c6, \"StyledInputBase\");\n$RefreshReg$(_c7, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","InputBase","IconButton","Typography","Paper","styled","SendIcon","SmartToyIcon","PersonIcon","jsxDEV","_jsxDEV","ChatContainer","width","backgroundColor","display","flexDirection","justifyContent","boxSizing","height","_c","ChatMessages","flexGrow","padding","overflowY","_c2","ChatMessageContainer","alignItems","margin","_c3","ChatMessage","user","marginLeft","borderRadius","color","maxWidth","_c4","ChatInputContainer","borderTop","_c5","StyledInputBase","marginRight","_c6","Chat","_s","messages","setMessages","input","setInput","messagesEndRef","handleSend","trim","text","simulateBotResponse","setTimeout","prevMessages","typing","index","interval","setInterval","length","newMessages","clearInterval","current","scrollIntoView","behavior","elevation","children","map","message","fileName","_jsxFileName","lineNumber","columnNumber","ref","value","onChange","e","target","onKeyPress","key","placeholder","onClick","_c7","$RefreshReg$"],"sources":["/home/xuan/Documents/llm-story-generator/llm-story-generator-frontend/src/Chat.js"],"sourcesContent":["// src/Chat.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, InputBase, IconButton, Typography, Paper, styled } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\nimport PersonIcon from '@mui/icons-material/Person';\n\nconst ChatContainer = styled(Paper)({\n  width: '50%',\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  boxSizing: 'border-box',\n  height: '100%',\n});\n\nconst ChatMessages = styled(Box)({\n  flexGrow: 1,\n  padding: '10px',\n  overflowY: 'auto',\n});\n\nconst ChatMessageContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'flex-start',\n  margin: '10px 0',\n});\n\nconst ChatMessage = styled(Box)(({ user }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: '8px',\n  padding: '10px',\n  borderRadius: '5px',\n  backgroundColor: user ? '#007BFF' : '#f0f0f0',\n  color: user ? '#ffffff' : '#000000',\n  maxWidth: '80%',\n}));\n\nconst ChatInputContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  padding: '10px',\n  borderTop: '1px solid #ccc',\n  backgroundColor: '#fff',\n});\n\nconst StyledInputBase = styled(InputBase)({\n  flexGrow: 1,\n  padding: '10px',\n  borderRadius: '20px',\n  backgroundColor: '#f0f0f0',\n  marginRight: '10px',\n});\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n\n  const handleSend = () => {\n    if (input.trim()) {\n      setMessages([...messages, { text: input, user: true }]);\n      setInput('');\n      simulateBotResponse('I am a robot. I do not know your word.');\n    }\n  };\n\n  const simulateBotResponse = (text) => {\n    setTimeout(() => {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { text: '', user: false, typing: true },\n      ]);\n      let index = -1;\n      const interval = setInterval(() => {\n        if (index < text.length - 1) {\n          setMessages((prevMessages) => {\n            const newMessages = [...prevMessages];\n            newMessages[newMessages.length - 1] = {\n              ...newMessages[newMessages.length - 1],\n              text: newMessages[newMessages.length - 1].text + text[index],\n            };\n            return newMessages;\n          });\n          index++;\n        } else {\n          clearInterval(interval);\n        }\n      }, 100); // Speed up the typing effect\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  return (\n    <ChatContainer elevation={3}>\n      <ChatMessages>\n        {messages.map((message, index) => (\n          <ChatMessageContainer key={index}>\n            {message.user ? <PersonIcon /> : <SmartToyIcon />}\n            <ChatMessage user={message.user}>\n              <Typography>{message.text}</Typography>\n            </ChatMessage>\n          </ChatMessageContainer>\n        ))}\n        <div ref={messagesEndRef} />\n      </ChatMessages>\n      <ChatInputContainer>\n        <StyledInputBase\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n          placeholder=\"Type a message...\"\n        />\n        <IconButton color=\"primary\" onClick={handleSend}>\n          <SendIcon />\n        </IconButton>\n      </ChatInputContainer>\n    </ChatContainer>\n  );\n}\n\nexport default Chat;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}